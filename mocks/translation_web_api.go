// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	entity "github.com/costaconrado/services-csm/internal/entity"
	mock "github.com/stretchr/testify/mock"
)

// TranslationWebAPI is an autogenerated mock type for the TranslationWebAPI type
type TranslationWebAPI struct {
	mock.Mock
}

// Translate provides a mock function with given fields: _a0
func (_m *TranslationWebAPI) Translate(_a0 entity.Translation) (entity.Translation, error) {
	ret := _m.Called(_a0)

	var r0 entity.Translation
	if rf, ok := ret.Get(0).(func(entity.Translation) entity.Translation); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(entity.Translation)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(entity.Translation) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewTranslationWebAPI interface {
	mock.TestingT
	Cleanup(func())
}

// NewTranslationWebAPI creates a new instance of TranslationWebAPI. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTranslationWebAPI(t mockConstructorTestingTNewTranslationWebAPI) *TranslationWebAPI {
	mock := &TranslationWebAPI{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
